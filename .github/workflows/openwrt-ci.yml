# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  #schedule:
  #  - cron: 0 20 * * *
  release:
    types: [published]
    
permissions:
  contents: read

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: Update feeds
        run: |
          echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
          echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> ./feeds.conf.default
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_DOCKER_CGROUP_OPTIONS=y
          CONFIG_DOCKER_NET_MACVLAN=y
          CONFIG_DOCKER_STO_EXT4=y
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_NGINX_HEADERS_MORE=y
          CONFIG_NGINX_HTTP_ACCESS=y
          CONFIG_NGINX_HTTP_AUTH_BASIC=y
          CONFIG_NGINX_HTTP_AUTOINDEX=y
          CONFIG_NGINX_HTTP_BROWSER=y
          CONFIG_NGINX_HTTP_CACHE=y
          CONFIG_NGINX_HTTP_CHARSET=y
          CONFIG_NGINX_HTTP_EMPTY_GIF=y
          CONFIG_NGINX_HTTP_FASTCGI=y
          CONFIG_NGINX_HTTP_GEO=y
          CONFIG_NGINX_HTTP_GZIP=y
          CONFIG_NGINX_HTTP_GZIP_STATIC=y
          CONFIG_NGINX_HTTP_LIMIT_CONN=y
          CONFIG_NGINX_HTTP_LIMIT_REQ=y
          CONFIG_NGINX_HTTP_MAP=y
          CONFIG_NGINX_HTTP_MEMCACHED=y
          CONFIG_NGINX_HTTP_PROXY=y
          CONFIG_NGINX_HTTP_REFERER=y
          CONFIG_NGINX_HTTP_REWRITE=y
          CONFIG_NGINX_HTTP_SCGI=y
          CONFIG_NGINX_HTTP_SPLIT_CLIENTS=y
          CONFIG_NGINX_HTTP_SSI=y
          CONFIG_NGINX_HTTP_UPSTREAM_HASH=y
          CONFIG_NGINX_HTTP_UPSTREAM_IP_HASH=y
          CONFIG_NGINX_HTTP_UPSTREAM_KEEPALIVE=y
          CONFIG_NGINX_HTTP_UPSTREAM_LEAST_CONN=y
          CONFIG_NGINX_HTTP_USERID=y
          CONFIG_NGINX_HTTP_UWSGI=y
          CONFIG_NGINX_HTTP_V2=y
          CONFIG_NGINX_NAXSI=y
          CONFIG_NGINX_PCRE=y
          CONFIG_NGINX_UBUS=y
          CONFIG_PACKAGE_adblock=y
          CONFIG_PACKAGE_adguardhome=y
          CONFIG_PACKAGE_aliyundrive-fuse=y
          CONFIG_PACKAGE_aliyundrive-webdav=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_coreutils-sort=y
          CONFIG_PACKAGE_ddnsto=y
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_dockerd=y
          CONFIG_PACKAGE_fuse-utils=y
          CONFIG_PACKAGE_iptables-mod-nat-extra=y
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-fuse=y
          CONFIG_PACKAGE_kmod-ifb=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ipt-nat-extra=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-sched-core=y
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-usb-ehci=y
          CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y
          CONFIG_PACKAGE_kmod-usb-wdm=y
          CONFIG_PACKAGE_kmod-usb-xhci-hcd=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_kmod-usb2-pci=y
          CONFIG_PACKAGE_kmod-usb3=y
          CONFIG_PACKAGE_kmod-usbmon=y
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_koolproxy=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libfuse=y
          CONFIG_PACKAGE_liblzo=y
          # CONFIG_PACKAGE_libminiupnpc is not set
          # CONFIG_PACKAGE_libnatpmp is not set
          CONFIG_PACKAGE_libnetwork=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libseccomp=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_lsblk=y
          CONFIG_PACKAGE_luci-app-adblock=y
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-advanced-reboot=y
          CONFIG_PACKAGE_luci-app-aliddns=y
          CONFIG_PACKAGE_luci-app-aliyundrive-fuse=y
          CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-app-argonne-config=y
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_V2ray_plugin=y
          # CONFIG_PACKAGE_luci-app-ddns is not set
          CONFIG_PACKAGE_luci-app-ddnsto=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-eqos=y
          CONFIG_PACKAGE_luci-app-ikoolproxy=y
          CONFIG_PACKAGE_luci-app-openclash=y
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-adblock-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-adguardhome-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-advanced-reboot-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aliddns-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aliyundrive-fuse-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aliyundrive-webdav-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-argon-config-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-argonne-config-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ddnsto-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-eqos-zh-cn=y
          CONFIG_PACKAGE_luci-lib-docker=y
          CONFIG_PACKAGE_luci-lib-httpclient=y
          CONFIG_PACKAGE_luci-nginx=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-qmi=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-argon-mod=y
          CONFIG_PACKAGE_luci-theme-argonne=y
          CONFIG_PACKAGE_luci-theme-atmaterial_new=y
          CONFIG_PACKAGE_luci-theme-ifit=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-mcat=y
          CONFIG_PACKAGE_luci-theme-neobird=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_luci-theme-opentopd=y
          CONFIG_PACKAGE_luci-theme-tomato=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_nginx=y
          CONFIG_PACKAGE_nginx-mod-luci=y
          CONFIG_PACKAGE_nginx-ssl=y
          CONFIG_PACKAGE_nginx-ssl-util=y
          CONFIG_PACKAGE_nginx-util=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_runc=y
          CONFIG_PACKAGE_tc-tiny=y
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_uqmi=y
          CONFIG_PACKAGE_uwsgi=y
          CONFIG_PACKAGE_uwsgi-cgi-plugin=y
          CONFIG_PACKAGE_uwsgi-luci-support=y
          CONFIG_PACKAGE_uwsgi-syslog-plugin=y
          CONFIG_PACKAGE_wwan=y
          # CONFIG_PACKAGE_zerotier is not set
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          sed -i "6i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings  # 网络端口：默认 eth0，第一个接口
          sed -i 's/$1$V4UetPzk$CYXluq4wUazHjmCDBCqXF.//g' openwrt/package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
